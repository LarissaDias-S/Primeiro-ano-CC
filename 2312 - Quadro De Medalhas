#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct
{
  char npais[20];
  int ouro;
  int prata;
  int bronze;
}pais;


//comparar cada caso em ordem de importancia, primeiro ouros, depois pratas, depois bronzes e depois ordem alfabet.
int
compara (const void *a, const void *b)
{

  pais *p1 = (pais *) a;
  pais *p2 = (pais *) b;

  if (p1->ouro > p2->ouro)
    {
      return -1;
    }
  else if (p1->ouro < p2->ouro)
    {
      return 1;
    }
  else if (p1->prata > p2->prata)
    {
      return -1;
    }
  else if (p1->prata < p2->prata)
    {
      return 1;
    }
  else if (p1->bronze > p2->bronze)
    {
      return -1;
    }
  else if (p1->bronze < p2->bronze)
    {
      return 1;
    }
  else
    {
      return strcmp (p1->npais, p2->npais);
    }
}


int
main ()
{
  int i, N;			//sendo N a quantidade de paises
  scanf ("%d", &N);
  
  struct pais *p; //pointeiro para alocar e depois comparar cada struct


  for (i = 0; i < N; i++)
    {
      pais *p; 

      p = (pais *) malloc (N * sizeof (pais)); //alocar

      if (p == NULL)
	{
	  printf ("Erro: memoria insuficiente\n");
	  exit (1);
	}


      for (i = 0; i < N; i++)
	{

	  scanf ("%s %d %d %d", p[i].npais, &p[i].ouro, &p[i].prata, &p[i].bronze);
	}

      qsort (p, N, sizeof (pais), compara);

      for (i = 0; i < N; i++)
	{

	  printf ("%s %d %d %d\n", p[i].npais, p[i].ouro, p[i].prata, p[i].bronze);
	}

      free (p);
    }

  return 0;

}
